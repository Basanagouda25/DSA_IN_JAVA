class Solution {
    public String decodeString(String s) {
        Stack<Integer> numberstack = new Stack<>();
        Stack<String> stringstack = new Stack<>();

        for(int i=0; i<s.length(); i++){
            char ch = s.charAt(i);

            if(ch >='0' && ch<='9'){
                int num = 0;
                while(i<s.length() && s.charAt(i)>='0' && s.charAt(i)<='9' ){
                    num = num * 10 + (int) (s.charAt(i)-'0');
                    i++;
                }
                i--;
                numberstack.push(num);
            }else if(ch != ']'){
                stringstack.push(ch+"");
            }else{
                String str = "";
                while(!stringstack.peek().equals("[")){
                    str = stringstack.pop() + str;
                }
                stringstack.pop();

                int repeat = numberstack.pop();
                StringBuilder sb = new StringBuilder();
                while(repeat > 0){
                    sb.append(str);
                    repeat--;
                }
                stringstack.push(sb.toString());
            }
        }
        StringBuilder result = new StringBuilder();
        while(stringstack.size() > 0){
            result.insert(0,stringstack.pop());
        }
        return result.toString();
    }
}
