import java.util.*;

//stack using array
public class stack {
    int[] arr;
    int top;
    int capacity;

    //Create a stack 
    public stack(int size) {
        arr = new int[size];
        capacity = size;
        top = -1;
    }

    //if stack is full
    public boolean isFull() {
        return top == capacity - 1;
    }

    //if stack is empty
    public boolean isEmpty() {
        return top == -1;
    }

    //push operation
    public void push(int x) {
        if (isFull()) {
            System.out.println("Stack Overflow");
            return;
        }
        arr[++top] = x;
        System.out.println("Value pushing:" + x);
    }

    //pop operation
    public int pop() {
        if (isEmpty()) {
            System.out.println("Stack is Empty");
        }
        return arr[--top];
    }

    //find top element
    public int topelement() {
        if (!isEmpty()) {
            return arr[top];
        }
        System.out.println("Stack is empty");
        return -1;
    }

    public void display() {
        for (int i = 0; i <= top; i++) {
            System.out.println(arr[i]);
        }
    }

    public static void main(String[] args) {
        stack s = new stack(5);
        s.push(10);
        s.push(20);
        s.push(30);
        s.display();
        System.out.println("Stack after popd");
        s.pop();
        s.display();
        System.out.println("Top element is:"+s.topelement());
    }
}
