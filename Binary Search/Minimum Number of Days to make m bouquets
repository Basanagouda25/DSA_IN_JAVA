class Solution {
    public int makeboq(int[] bloomDay, int mid, int k){
        int boqcount = 0;
        int kcount=0;
        for(int i=0; i<bloomDay.length; i++){
            if(bloomDay[i] <= mid){
                kcount++;
            }else{
                kcount=0;
            }
            if(kcount == k){
                boqcount++;
                kcount=0;
            }
        }
        return boqcount;
    }
    public int minDays(int[] bloomDay, int m, int k) {
        int startday = 0;
        int endday = Arrays.stream(bloomDay).max().getAsInt();
        int result = -1;

        while(startday <= endday){
            int mid = startday + (endday-startday)/2;
            if(makeboq(bloomDay,mid,k) >= m){
                result = mid;
                endday =  mid-1;
            }else{
                startday = mid + 1;
            }
        }
        return result;
    }
}
