Two Pointer:
class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int l = 0, r = arr.length - 1;
        while (r - l + 1 > k) {
            if ((Math.abs(arr[l] - x) > Math.abs(arr[r] - x))) {
                l++;
            } else if ((Math.abs(arr[l] - x) < Math.abs(arr[r] - x))) {
                r--;
            } else {
                r--;

            }
        }
        return Arrays.stream(arr, l, r + 1).boxed().collect(Collectors.toList());
    }
}

Binary Search:
class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int l=0,r=arr.length-k;
        while(l < r){
            int mid = l + (r-l)/2;
            if(x-arr[mid] > arr[mid+k]-x){
                l = mid + 1;
            }else{
                r = mid;
            }
        }
        List<Integer> res = new ArrayList<>();
        for(int i=l; i<l+k; i++){
            res.add(arr[i]);
        }
        return res;
    }
}
