class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        List<int[]> countOnes = new ArrayList<>();
        int ind=0;
        for(int[] a:mat){
            int soilders = binarysearch(a);
            countOnes.add(new int[]{ind++,soilders});
        }
        countOnes.sort((x1,x2) -> Integer.compare(x1[1],x2[1]));
        int[] res = new int[k];
        for(int i=0; i<k; i++){
            res[i] = countOnes.get(i)[0];
        }
        return res;
    }
    public int binarysearch(int[] a){
        int n = a.length;
        int l = 0,r=n-1;
        int result=-1;
        while(l <= r){
            int mid = l+(r-l)/2;
            if(a[mid] == 1){
                result = mid;
                l = mid+1;
            }else{
                r = mid-1;
            }
        }
        return result+1;
    }
}
